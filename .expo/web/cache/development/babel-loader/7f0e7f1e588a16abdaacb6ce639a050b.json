{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { BlurView } from \"expo-blur\";\nimport React from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { COLORS, SIZES } from \"../../constants\";\nimport RecipeCardDetails from \"./RecipeCardDetails\";\n\nvar RecipeCardInfo = function RecipeCardInfo(_ref) {\n  var recipeItem = _ref.recipeItem;\n\n  if (Platform.OS === \"ios\") {\n    return React.createElement(BlurView, {\n      tint: \"dark\",\n      style: styles.RecipeCardContainer\n    }, React.createElement(RecipeCardDetails, {\n      recipeItem: recipeItem\n    }));\n  }\n\n  return React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.RecipeCardContainer), {}, {\n      backgroundColor: COLORS.transparentDarkGray\n    })\n  }, React.createElement(RecipeCardDetails, {\n    recipeItem: recipeItem\n  }));\n};\n\nvar styles = StyleSheet.create({\n  RecipeCardContainer: {\n    position: \"absolute\",\n    bottom: 10,\n    left: 10,\n    right: 10,\n    height: 100,\n    paddingVertical: SIZES.radius,\n    paddingHorizontal: SIZES.base,\n    borderRadius: SIZES.radius\n  }\n});\nexport default RecipeCardInfo;","map":{"version":3,"sources":["C:/Users/U759450/Desktop/food-recipe/food-recipe/components/Recipe/RecipeCardInfo.tsx"],"names":["BlurView","React","COLORS","SIZES","RecipeCardDetails","RecipeCardInfo","recipeItem","Platform","OS","styles","RecipeCardContainer","backgroundColor","transparentDarkGray","StyleSheet","create","position","bottom","left","right","height","paddingVertical","radius","paddingHorizontal","base","borderRadius"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,WAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,MAAT,EAAiBC,KAAjB;AACA,OAAOC,iBAAP;;AAMA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAoC;AAAA,MAAjCC,UAAiC,QAAjCA,UAAiC;;AACzD,MAAIC,QAAQ,CAACC,EAAT,KAAgB,KAApB,EAA2B;AACzB,WACE,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAC,MAAf;AAAsB,MAAA,KAAK,EAAEC,MAAM,CAACC;AAApC,OACE,oBAAC,iBAAD;AAAmB,MAAA,UAAU,EAAEJ;AAA/B,MADF,CADF;AAKD;;AACD,SACE,oBAAC,IAAD;AACE,IAAA,KAAK,kCACAG,MAAM,CAACC,mBADP;AAEHC,MAAAA,eAAe,EAAET,MAAM,CAACU;AAFrB;AADP,KAME,oBAAC,iBAAD;AAAmB,IAAA,UAAU,EAAEN;AAA/B,IANF,CADF;AAUD,CAlBD;;AAoBA,IAAMG,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,mBAAmB,EAAE;AACnBK,IAAAA,QAAQ,EAAE,UADS;AAEnBC,IAAAA,MAAM,EAAE,EAFW;AAGnBC,IAAAA,IAAI,EAAE,EAHa;AAInBC,IAAAA,KAAK,EAAE,EAJY;AAKnBC,IAAAA,MAAM,EAAE,GALW;AAMnBC,IAAAA,eAAe,EAAEjB,KAAK,CAACkB,MANJ;AAOnBC,IAAAA,iBAAiB,EAAEnB,KAAK,CAACoB,IAPN;AAQnBC,IAAAA,YAAY,EAAErB,KAAK,CAACkB;AARD;AADU,CAAlB,CAAf;AAaA,eAAehB,cAAf","sourcesContent":["import { BlurView } from \"expo-blur\";\r\nimport React from \"react\";\r\nimport { Platform, StyleSheet, View } from \"react-native\";\r\nimport { COLORS, SIZES } from \"../../constants\";\r\nimport RecipeCardDetails from \"./RecipeCardDetails\";\r\n\r\ninterface RecipeCardInfo {\r\n  recipeItem: any;\r\n}\r\n\r\nconst RecipeCardInfo = ({ recipeItem }: RecipeCardInfo) => {\r\n  if (Platform.OS === \"ios\") {\r\n    return (\r\n      <BlurView tint=\"dark\" style={styles.RecipeCardContainer}>\r\n        <RecipeCardDetails recipeItem={recipeItem} />\r\n      </BlurView>\r\n    );\r\n  }\r\n  return (\r\n    <View\r\n      style={{\r\n        ...styles.RecipeCardContainer,\r\n        backgroundColor: COLORS.transparentDarkGray,\r\n      }}\r\n    >\r\n      <RecipeCardDetails recipeItem={recipeItem} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  RecipeCardContainer: {\r\n    position: \"absolute\",\r\n    bottom: 10,\r\n    left: 10,\r\n    right: 10,\r\n    height: 100,\r\n    paddingVertical: SIZES.radius,\r\n    paddingHorizontal: SIZES.base,\r\n    borderRadius: SIZES.radius,\r\n  },\r\n});\r\n\r\nexport default RecipeCardInfo;\r\n"]},"metadata":{},"sourceType":"module"}