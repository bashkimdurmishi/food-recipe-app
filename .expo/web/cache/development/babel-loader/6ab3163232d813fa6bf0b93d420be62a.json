{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { FONTS, SIZES, COLORS } from \"../../constants\";\n\nvar CategoryCard = function CategoryCard(_ref) {\n  var containerStyle = _ref.containerStyle,\n      categoryItem = _ref.categoryItem,\n      onPress = _ref.onPress;\n  return React.createElement(TouchableOpacity, {\n    style: _objectSpread({\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      padding: 10,\n      marginTop: 10,\n      borderRadius: SIZES.radius,\n      backgroundColor: COLORS.gray2\n    }, containerStyle),\n    onPress: onPress\n  }, React.createElement(Image, {\n    source: categoryItem.image,\n    resizeMode: \"cover\",\n    style: {\n      width: 100,\n      height: 100,\n      borderRadius: SIZES.radius\n    }\n  }), React.createElement(View, {\n    style: {\n      width: \"65%\",\n      paddingHorizontal: 20\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread({\n      flex: 1\n    }, FONTS.h2)\n  }, categoryItem.name), React.createElement(Text, {\n    style: _objectSpread({\n      color: COLORS.gray\n    }, FONTS.body4)\n  }, categoryItem.duration, \" | \", categoryItem.serving, \" \", categoryItem.serving === 1 ? \"serving\" : \"servings\")));\n};\n\nexport default CategoryCard;","map":{"version":3,"sources":["C:/Users/U759450/Desktop/food-recipe/food-recipe/components/Home/CategoryCard.tsx"],"names":["React","FONTS","SIZES","COLORS","CategoryCard","containerStyle","categoryItem","onPress","flexDirection","alignItems","padding","marginTop","borderRadius","radius","backgroundColor","gray2","image","width","height","paddingHorizontal","flex","h2","name","color","gray","body4","duration","serving"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,MAAvB;;AAQA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAID;AAAA,MAHlBC,cAGkB,QAHlBA,cAGkB;AAAA,MAFlBC,YAEkB,QAFlBA,YAEkB;AAAA,MADlBC,OACkB,QADlBA,OACkB;AAClB,SACE,oBAAC,gBAAD;AACE,IAAA,KAAK;AACHC,MAAAA,aAAa,EAAE,KADZ;AAEHC,MAAAA,UAAU,EAAE,QAFT;AAGHC,MAAAA,OAAO,EAAE,EAHN;AAIHC,MAAAA,SAAS,EAAE,EAJR;AAKHC,MAAAA,YAAY,EAAEV,KAAK,CAACW,MALjB;AAMHC,MAAAA,eAAe,EAAEX,MAAM,CAACY;AANrB,OAOAV,cAPA,CADP;AAUE,IAAA,OAAO,EAAEE;AAVX,KAaE,oBAAC,KAAD;AACE,IAAA,MAAM,EAAED,YAAY,CAACU,KADvB;AAEE,IAAA,UAAU,EAAC,OAFb;AAGE,IAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE,GADF;AAELC,MAAAA,MAAM,EAAE,GAFH;AAGLN,MAAAA,YAAY,EAAEV,KAAK,CAACW;AAHf;AAHT,IAbF,EAwBE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLI,MAAAA,KAAK,EAAE,KADF;AAELE,MAAAA,iBAAiB,EAAE;AAFd;AADT,KAOE,oBAAC,IAAD;AACE,IAAA,KAAK;AACHC,MAAAA,IAAI,EAAE;AADH,OAEAnB,KAAK,CAACoB,EAFN;AADP,KAMGf,YAAY,CAACgB,IANhB,CAPF,EAgBE,oBAAC,IAAD;AACE,IAAA,KAAK;AACHC,MAAAA,KAAK,EAAEpB,MAAM,CAACqB;AADX,OAEAvB,KAAK,CAACwB,KAFN;AADP,KAMGnB,YAAY,CAACoB,QANhB,SAM6BpB,YAAY,CAACqB,OAN1C,EAMmD,GANnD,EAOGrB,YAAY,CAACqB,OAAb,KAAyB,CAAzB,GAA6B,SAA7B,GAAyC,UAP5C,CAhBF,CAxBF,CADF;AAqDD,CA1DD;;AA4DA,eAAevB,YAAf","sourcesContent":["import React from \"react\";\r\nimport { View, Text, TouchableOpacity, Image } from \"react-native\";\r\nimport { FONTS, SIZES, COLORS } from \"../../constants\";\r\n\r\ninterface CategoryCard {\r\n  containerStyle: any;\r\n  categoryItem: any;\r\n  onPress: any;\r\n}\r\n\r\nconst CategoryCard = ({\r\n  containerStyle,\r\n  categoryItem,\r\n  onPress,\r\n}: CategoryCard) => {\r\n  return (\r\n    <TouchableOpacity\r\n      style={{\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        padding: 10,\r\n        marginTop: 10,\r\n        borderRadius: SIZES.radius,\r\n        backgroundColor: COLORS.gray2,\r\n        ...containerStyle,\r\n      }}\r\n      onPress={onPress}\r\n    >\r\n      {/* Image */}\r\n      <Image\r\n        source={categoryItem.image}\r\n        resizeMode=\"cover\"\r\n        style={{\r\n          width: 100,\r\n          height: 100,\r\n          borderRadius: SIZES.radius,\r\n        }}\r\n      />\r\n\r\n      {/* Details */}\r\n      <View\r\n        style={{\r\n          width: \"65%\",\r\n          paddingHorizontal: 20,\r\n        }}\r\n      >\r\n        {/* Name */}\r\n        <Text\r\n          style={{\r\n            flex: 1,\r\n            ...FONTS.h2,\r\n          }}\r\n        >\r\n          {categoryItem.name}\r\n        </Text>\r\n        {/* Servings */}\r\n        <Text\r\n          style={{\r\n            color: COLORS.gray,\r\n            ...FONTS.body4,\r\n          }}\r\n        >\r\n          {categoryItem.duration} | {categoryItem.serving}{\" \"}\r\n          {categoryItem.serving === 1 ? \"serving\" : \"servings\"}\r\n        </Text>\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nexport default CategoryCard;\r\n"]},"metadata":{},"sourceType":"module"}