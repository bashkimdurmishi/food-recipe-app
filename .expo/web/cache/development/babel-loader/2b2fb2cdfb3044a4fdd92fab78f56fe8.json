{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { COLORS, FONTS } from \"../../constants\";\n\nvar Viewers = function Viewers(_ref) {\n  var viewersList = _ref.viewersList;\n\n  if ((viewersList == null ? void 0 : viewersList.length) == 0) {\n    return React.createElement(View, {\n      style: {\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      }\n    }, React.createElement(Text, {\n      style: _objectSpread({\n        color: COLORS.lightGray2\n      }, FONTS.body4)\n    }, \"Be the first to try this!\"));\n  } else {\n    return React.createElement(View, null, React.createElement(View, {\n      style: {\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        marginBottom: 10\n      }\n    }, viewersList == null ? void 0 : viewersList.map(function (item, index) {\n      if (index <= 2) {\n        return React.createElement(View, {\n          key: index,\n          style: {\n            height: 50,\n            width: 50,\n            marginLeft: index == 0 ? 0 : -20\n          }\n        }, React.createElement(Image, {\n          source: item.profilePic,\n          style: {\n            width: 50,\n            height: 50,\n            borderRadius: 25\n          }\n        }));\n      }\n\n      if (index == 3) {\n        return React.createElement(View, {\n          key: index,\n          style: {\n            height: 50,\n            width: 50,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            marginLeft: -20,\n            borderRadius: 25,\n            backgroundColor: COLORS.darkGreen\n          }\n        }, React.createElement(Text, {\n          style: _objectSpread({\n            color: COLORS.white\n          }, FONTS.body4)\n        }, \"+\", (viewersList == null ? void 0 : viewersList.length) - 3));\n      }\n    })), React.createElement(Text, {\n      style: _objectSpread(_objectSpread({\n        color: COLORS.lightGray2,\n        textAlign: \"right\"\n      }, FONTS.body4), {}, {\n        lineHeight: 18\n      })\n    }, viewersList == null ? void 0 : viewersList.length, \" people\"), React.createElement(Text, {\n      style: _objectSpread(_objectSpread({\n        color: COLORS.lightGray2,\n        textAlign: \"right\"\n      }, FONTS.body4), {}, {\n        lineHeight: 18\n      })\n    }, \"Already tried this!\"));\n  }\n};\n\nexport default Viewers;","map":{"version":3,"sources":["C:/Users/U759450/Desktop/food-recipe/food-recipe/components/Recipe/Viewers.tsx"],"names":["React","COLORS","FONTS","Viewers","viewersList","length","alignItems","justifyContent","color","lightGray2","body4","flexDirection","marginBottom","map","item","index","height","width","marginLeft","profilePic","borderRadius","backgroundColor","darkGreen","white","textAlign","lineHeight"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,MAAT,EAAiBC,KAAjB;;AAMA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAA8B;AAAA,MAA3BC,WAA2B,QAA3BA,WAA2B;;AAC5C,MAAI,CAAAA,WAAW,QAAX,YAAAA,WAAW,CAAEC,MAAb,KAAuB,CAA3B,EAA8B;AAC5B,WACE,oBAAC,IAAD;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,UAAU,EAAE,QADP;AAELC,QAAAA,cAAc,EAAE;AAFX;AADT,OAME,oBAAC,IAAD;AACE,MAAA,KAAK;AACHC,QAAAA,KAAK,EAAEP,MAAM,CAACQ;AADX,SAEAP,KAAK,CAACQ,KAFN;AADP,mCANF,CADF;AAiBD,GAlBD,MAkBO;AACL,WACE,oBAAC,IAAD,QAEE,oBAAC,IAAD;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,aAAa,EAAE,KADV;AAELL,QAAAA,UAAU,EAAE,QAFP;AAGLC,QAAAA,cAAc,EAAE,QAHX;AAILK,QAAAA,YAAY,EAAE;AAJT;AADT,OAQGR,WARH,oBAQGA,WAAW,CAAES,GAAb,CAAiB,UAACC,IAAD,EAAYC,KAAZ,EAA8B;AAC9C,UAAIA,KAAK,IAAI,CAAb,EAAgB;AACd,eACE,oBAAC,IAAD;AACE,UAAA,GAAG,EAAEA,KADP;AAEE,UAAA,KAAK,EAAE;AACLC,YAAAA,MAAM,EAAE,EADH;AAELC,YAAAA,KAAK,EAAE,EAFF;AAGLC,YAAAA,UAAU,EAAEH,KAAK,IAAI,CAAT,GAAa,CAAb,GAAiB,CAAC;AAHzB;AAFT,WAQE,oBAAC,KAAD;AACE,UAAA,MAAM,EAAED,IAAI,CAACK,UADf;AAEE,UAAA,KAAK,EAAE;AACLF,YAAAA,KAAK,EAAE,EADF;AAELD,YAAAA,MAAM,EAAE,EAFH;AAGLI,YAAAA,YAAY,EAAE;AAHT;AAFT,UARF,CADF;AAmBD;;AACD,UAAIL,KAAK,IAAI,CAAb,EAAgB;AACd,eACE,oBAAC,IAAD;AACE,UAAA,GAAG,EAAEA,KADP;AAEE,UAAA,KAAK,EAAE;AACLC,YAAAA,MAAM,EAAE,EADH;AAELC,YAAAA,KAAK,EAAE,EAFF;AAGLX,YAAAA,UAAU,EAAE,QAHP;AAILC,YAAAA,cAAc,EAAE,QAJX;AAKLW,YAAAA,UAAU,EAAE,CAAC,EALR;AAMLE,YAAAA,YAAY,EAAE,EANT;AAOLC,YAAAA,eAAe,EAAEpB,MAAM,CAACqB;AAPnB;AAFT,WAYE,oBAAC,IAAD;AACE,UAAA,KAAK;AACHd,YAAAA,KAAK,EAAEP,MAAM,CAACsB;AADX,aAEArB,KAAK,CAACQ,KAFN;AADP,gBAMI,CAAAN,WAAW,QAAX,YAAAA,WAAW,CAAEC,MAAb,IAAsB,CAN1B,CAZF,CADF;AAuBD;AACF,KA/CA,CARH,CAFF,EA6DE,oBAAC,IAAD;AACE,MAAA,KAAK;AACHG,QAAAA,KAAK,EAAEP,MAAM,CAACQ,UADX;AAEHe,QAAAA,SAAS,EAAE;AAFR,SAGAtB,KAAK,CAACQ,KAHN;AAIHe,QAAAA,UAAU,EAAE;AAJT;AADP,OAQGrB,WARH,oBAQGA,WAAW,CAAEC,MARhB,YA7DF,EAuEE,oBAAC,IAAD;AACE,MAAA,KAAK;AACHG,QAAAA,KAAK,EAAEP,MAAM,CAACQ,UADX;AAEHe,QAAAA,SAAS,EAAE;AAFR,SAGAtB,KAAK,CAACQ,KAHN;AAIHe,QAAAA,UAAU,EAAE;AAJT;AADP,6BAvEF,CADF;AAoFD;AACF,CAzGD;;AA2GA,eAAetB,OAAf","sourcesContent":["import React from \"react\";\r\nimport { View, Text, Image } from \"react-native\";\r\nimport { COLORS, FONTS } from \"../../constants\";\r\n\r\ninterface Viewers {\r\n  viewersList: any;\r\n}\r\n\r\nconst Viewers = ({ viewersList }: Viewers) => {\r\n  if (viewersList?.length == 0) {\r\n    return (\r\n      <View\r\n        style={{\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <Text\r\n          style={{\r\n            color: COLORS.lightGray2,\r\n            ...FONTS.body4,\r\n          }}\r\n        >\r\n          Be the first to try this!\r\n        </Text>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View>\r\n        {/* Profile */}\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            marginBottom: 10,\r\n          }}\r\n        >\r\n          {viewersList?.map((item: any, index: number) => {\r\n            if (index <= 2) {\r\n              return (\r\n                <View\r\n                  key={index}\r\n                  style={{\r\n                    height: 50,\r\n                    width: 50,\r\n                    marginLeft: index == 0 ? 0 : -20,\r\n                  }}\r\n                >\r\n                  <Image\r\n                    source={item.profilePic}\r\n                    style={{\r\n                      width: 50,\r\n                      height: 50,\r\n                      borderRadius: 25,\r\n                    }}\r\n                  />\r\n                </View>\r\n              );\r\n            }\r\n            if (index == 3) {\r\n              return (\r\n                <View\r\n                  key={index}\r\n                  style={{\r\n                    height: 50,\r\n                    width: 50,\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    marginLeft: -20,\r\n                    borderRadius: 25,\r\n                    backgroundColor: COLORS.darkGreen,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      color: COLORS.white,\r\n                      ...FONTS.body4,\r\n                    }}\r\n                  >\r\n                    +{viewersList?.length - 3}\r\n                  </Text>\r\n                </View>\r\n              );\r\n            }\r\n          })}\r\n        </View>\r\n\r\n        {/* Text */}\r\n        <Text\r\n          style={{\r\n            color: COLORS.lightGray2,\r\n            textAlign: \"right\",\r\n            ...FONTS.body4,\r\n            lineHeight: 18,\r\n          }}\r\n        >\r\n          {viewersList?.length} people\r\n        </Text>\r\n        <Text\r\n          style={{\r\n            color: COLORS.lightGray2,\r\n            textAlign: \"right\",\r\n            ...FONTS.body4,\r\n            lineHeight: 18,\r\n          }}\r\n        >\r\n          Already tried this!\r\n        </Text>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Viewers;\r\n"]},"metadata":{},"sourceType":"module"}