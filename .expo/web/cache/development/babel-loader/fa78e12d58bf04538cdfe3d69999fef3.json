{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Viewers } from \"../components/Recipe\";\nimport { RecipeCreatorCardInfo } from \"../components/Recipe\";\nimport { COLORS, SIZES, FONTS, icons } from \"../constants\";\n\nvar Recipe = function Recipe(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedRecipe = _useState2[0],\n      setSelectedRecipe = _useState2[1];\n\n  var scrollY = useRef(new Animated.Value(0)).current;\n  var HEADER_HEIGHT = 350;\n  useEffect(function () {\n    var recipe = route.params.recipe;\n    setSelectedRecipe(recipe);\n  }, []);\n\n  var renderRecipeCardHeader = function renderRecipeCardHeader() {\n    return React.createElement(View, {\n      style: {\n        marginTop: -2000,\n        paddingTop: 2000,\n        alignItems: \"center\",\n        overflow: \"hidden\"\n      }\n    }, React.createElement(Animated.Image, {\n      source: selectedRecipe == null ? void 0 : selectedRecipe.image,\n      resizeMode: \"contain\",\n      style: {\n        height: HEADER_HEIGHT,\n        width: \"200%\",\n        transform: [{\n          translateY: scrollY.interpolate({\n            inputRange: [-HEADER_HEIGHT, 0, HEADER_HEIGHT],\n            outputRange: [-HEADER_HEIGHT / 2, 0, HEADER_HEIGHT * 0.75]\n          })\n        }, {\n          scale: scrollY.interpolate({\n            inputRange: [-HEADER_HEIGHT, 0, HEADER_HEIGHT],\n            outputRange: [2, 1, 0.75]\n          })\n        }]\n      }\n    }), React.createElement(Animated.View, {\n      style: {\n        position: \"absolute\",\n        bottom: 10,\n        left: 30,\n        right: 30,\n        height: 80\n      }\n    }, React.createElement(RecipeCreatorCardInfo, {\n      selectedRecipe: selectedRecipe\n    })));\n  };\n\n  var renderHeaderBar = function renderHeaderBar() {\n    return React.createElement(View, {\n      style: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        right: 0,\n        height: 90,\n        flexDirection: \"row\",\n        alignItems: \"flex-end\",\n        justifyContent: \"space-between\",\n        paddingHorizontal: SIZES.padding,\n        paddingBottom: 10\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: {\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: 35,\n        width: 35,\n        borderRadius: 18,\n        borderWidth: 1,\n        borderColor: COLORS.lightGray,\n        backgroundColor: COLORS.transparentBlack5\n      },\n      onPress: function onPress() {\n        return navigation.goBack();\n      }\n    }, React.createElement(Image, {\n      source: icons.back,\n      style: {\n        width: 15,\n        height: 15,\n        tintColor: COLORS.lightGray\n      }\n    })), React.createElement(TouchableOpacity, {\n      style: {\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: 35,\n        width: 35\n      }\n    }, React.createElement(Image, {\n      source: selectedRecipe != null && selectedRecipe.isBookmark ? icons.bookmarkFilled : icons.bookmark,\n      style: {\n        width: 30,\n        height: 30,\n        tintColor: COLORS.darkGreen\n      }\n    })));\n  };\n\n  var renderRecipeInfo = function renderRecipeInfo() {\n    return React.createElement(View, {\n      style: {\n        flexDirection: \"row\",\n        height: 130,\n        width: SIZES.width,\n        paddingHorizontal: 30,\n        paddingVertical: 20,\n        alignItems: \"center\"\n      }\n    }, React.createElement(View, {\n      style: {\n        flex: 1.5,\n        justifyContent: \"center\"\n      }\n    }, React.createElement(Text, {\n      style: _objectSpread({}, FONTS.h2)\n    }, selectedRecipe == null ? void 0 : selectedRecipe.name), React.createElement(Text, {\n      style: _objectSpread({\n        marginTop: 5,\n        color: COLORS.lightGray2\n      }, FONTS.body4)\n    }, selectedRecipe == null ? void 0 : selectedRecipe.duration, \" | \", selectedRecipe == null ? void 0 : selectedRecipe.serving, \" Servings\")), React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: \"center\"\n      }\n    }, React.createElement(Viewers, {\n      viewersList: selectedRecipe == null ? void 0 : selectedRecipe.viewers\n    })));\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: COLORS.white\n    }\n  }, React.createElement(Animated.FlatList, {\n    data: selectedRecipe == null ? void 0 : selectedRecipe.ingredients,\n    keyExtractor: function keyExtractor(item) {\n      return \"\" + item.id;\n    },\n    showsVerticalScrollIndicator: false,\n    ListHeaderComponent: React.createElement(View, null, renderRecipeCardHeader(), renderRecipeInfo()),\n    scrollEventThrottle: 16,\n    onScroll: Animated.event([{\n      nativeEvent: {\n        contentOffset: {\n          y: scrollY\n        }\n      }\n    }], {\n      useNativeDriver: true\n    }),\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          paddingHorizontal: 30,\n          marginVertical: 5\n        }\n      }, React.createElement(View, {\n        style: {\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          height: 50,\n          borderRadius: 5,\n          backgroundColor: COLORS.lightGray\n        }\n      }, React.createElement(Image, {\n        source: item.icon,\n        style: {\n          height: 40,\n          width: 40\n        }\n      })), React.createElement(View, {\n        style: {\n          flex: 1,\n          paddingHorizontal: 20,\n          justifyContent: \"center\"\n        }\n      }, React.createElement(Text, {\n        style: _objectSpread({}, FONTS.body3)\n      }, item.description)), React.createElement(View, {\n        style: {\n          alignItems: \"flex-end\",\n          justifyContent: \"center\"\n        }\n      }, React.createElement(Text, {\n        style: _objectSpread({}, FONTS.body3)\n      }, item.quantity)));\n    }\n  }), renderHeaderBar());\n};\n\nexport default Recipe;","map":{"version":3,"sources":["C:/Users/U759450/Desktop/food-recipe/food-recipe/screens/Recipe.tsx"],"names":["React","useEffect","useRef","useState","Viewers","RecipeCreatorCardInfo","COLORS","SIZES","FONTS","icons","Recipe","navigation","route","selectedRecipe","setSelectedRecipe","scrollY","Animated","Value","current","HEADER_HEIGHT","recipe","params","renderRecipeCardHeader","marginTop","paddingTop","alignItems","overflow","image","height","width","transform","translateY","interpolate","inputRange","outputRange","scale","position","bottom","left","right","renderHeaderBar","top","flexDirection","justifyContent","paddingHorizontal","padding","paddingBottom","borderRadius","borderWidth","borderColor","lightGray","backgroundColor","transparentBlack5","goBack","back","tintColor","isBookmark","bookmarkFilled","bookmark","darkGreen","renderRecipeInfo","paddingVertical","flex","h2","name","color","lightGray2","body4","duration","serving","viewers","white","ingredients","item","id","event","nativeEvent","contentOffset","y","useNativeDriver","marginVertical","icon","body3","description","quantity"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { View, Text, TouchableOpacity, Animated, Image } from \"react-native\";\r\nimport { Viewers } from \"../components/Recipe\";\r\nimport { RecipeCreatorCardInfo } from \"../components/Recipe\";\r\nimport { COLORS, SIZES, FONTS, icons } from \"../constants\";\r\n\r\ninterface Recipe {\r\n  navigation: {\r\n    goBack: () => void;\r\n  };\r\n  route: {\r\n    params: {\r\n      recipe: string;\r\n    };\r\n  };\r\n}\r\n\r\ninterface SelectedRecipe {\r\n  image: number;\r\n  name: string;\r\n  isBookmark: string;\r\n  duration: string;\r\n  viewers: string[];\r\n  serving: number;\r\n  ingredients: string[];\r\n}\r\n\r\nconst Recipe = ({ navigation, route }: Recipe) => {\r\n  const [selectedRecipe, setSelectedRecipe] = useState<SelectedRecipe | any>(\r\n    null\r\n  );\r\n\r\n  const scrollY = useRef(new Animated.Value(0)).current;\r\n\r\n  const HEADER_HEIGHT = 350;\r\n\r\n  useEffect(() => {\r\n    let { recipe } = route.params;\r\n    setSelectedRecipe(recipe);\r\n  }, []);\r\n\r\n  const renderRecipeCardHeader = () => {\r\n    return (\r\n      <View\r\n        style={{\r\n          marginTop: -2000,\r\n          paddingTop: 2000,\r\n          alignItems: \"center\",\r\n          overflow: \"hidden\",\r\n        }}\r\n      >\r\n        {/* Background Image */}\r\n        <Animated.Image\r\n          source={selectedRecipe?.image}\r\n          resizeMode=\"contain\"\r\n          style={{\r\n            height: HEADER_HEIGHT,\r\n            width: \"200%\",\r\n            transform: [\r\n              {\r\n                translateY: scrollY.interpolate({\r\n                  inputRange: [-HEADER_HEIGHT, 0, HEADER_HEIGHT],\r\n                  outputRange: [-HEADER_HEIGHT / 2, 0, HEADER_HEIGHT * 0.75],\r\n                }),\r\n              },\r\n              {\r\n                scale: scrollY.interpolate({\r\n                  inputRange: [-HEADER_HEIGHT, 0, HEADER_HEIGHT],\r\n                  outputRange: [2, 1, 0.75],\r\n                }),\r\n              },\r\n            ],\r\n          }}\r\n        />\r\n        {/* Recipe Creator Card */}\r\n        <Animated.View\r\n          style={{\r\n            position: \"absolute\",\r\n            bottom: 10,\r\n            left: 30,\r\n            right: 30,\r\n            height: 80,\r\n          }}\r\n        >\r\n          <RecipeCreatorCardInfo selectedRecipe={selectedRecipe} />\r\n        </Animated.View>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  const renderHeaderBar = () => {\r\n    return (\r\n      <View\r\n        style={{\r\n          position: \"absolute\",\r\n          top: 0,\r\n          left: 0,\r\n          right: 0,\r\n          height: 90,\r\n          flexDirection: \"row\",\r\n          alignItems: \"flex-end\",\r\n          justifyContent: \"space-between\",\r\n          paddingHorizontal: SIZES.padding,\r\n          paddingBottom: 10,\r\n        }}\r\n      >\r\n        {/* Back Button */}\r\n        <TouchableOpacity\r\n          style={{\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            height: 35,\r\n            width: 35,\r\n            borderRadius: 18,\r\n            borderWidth: 1,\r\n            borderColor: COLORS.lightGray,\r\n            backgroundColor: COLORS.transparentBlack5,\r\n          }}\r\n          onPress={() => navigation.goBack()}\r\n        >\r\n          <Image\r\n            source={icons.back}\r\n            style={{\r\n              width: 15,\r\n              height: 15,\r\n              tintColor: COLORS.lightGray,\r\n            }}\r\n          />\r\n        </TouchableOpacity>\r\n\r\n        {/* Bookmark */}\r\n        <TouchableOpacity\r\n          style={{\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            height: 35,\r\n            width: 35,\r\n          }}\r\n        >\r\n          <Image\r\n            source={\r\n              selectedRecipe?.isBookmark ? icons.bookmarkFilled : icons.bookmark\r\n            }\r\n            style={{\r\n              width: 30,\r\n              height: 30,\r\n              tintColor: COLORS.darkGreen,\r\n            }}\r\n          />\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  const renderRecipeInfo = () => {\r\n    return (\r\n      <View\r\n        style={{\r\n          flexDirection: \"row\",\r\n          height: 130,\r\n          width: SIZES.width,\r\n          paddingHorizontal: 30,\r\n          paddingVertical: 20,\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        {/* Recipe */}\r\n        <View\r\n          style={{\r\n            flex: 1.5,\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <Text style={{ ...FONTS.h2 }}>{selectedRecipe?.name}</Text>\r\n          <Text\r\n            style={{\r\n              marginTop: 5,\r\n              color: COLORS.lightGray2,\r\n              ...FONTS.body4,\r\n            }}\r\n          >\r\n            {selectedRecipe?.duration} | {selectedRecipe?.serving} Servings\r\n          </Text>\r\n        </View>\r\n        {/* Viewers */}\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <Viewers viewersList={selectedRecipe?.viewers} />\r\n        </View>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <View\r\n      style={{\r\n        flex: 1,\r\n        backgroundColor: COLORS.white,\r\n      }}\r\n    >\r\n      <Animated.FlatList\r\n        data={selectedRecipe?.ingredients}\r\n        keyExtractor={(item) => `${item.id}`}\r\n        showsVerticalScrollIndicator={false}\r\n        ListHeaderComponent={\r\n          <View>\r\n            {/* Header */}\r\n            {renderRecipeCardHeader()}\r\n            {/* Info */}\r\n            {renderRecipeInfo()}\r\n            {/* Ingredient Title */}\r\n          </View>\r\n        }\r\n        scrollEventThrottle={16}\r\n        onScroll={Animated.event(\r\n          [{ nativeEvent: { contentOffset: { y: scrollY } } }],\r\n          { useNativeDriver: true }\r\n        )}\r\n        renderItem={({ item }) => (\r\n          <View\r\n            style={{\r\n              flexDirection: \"row\",\r\n              paddingHorizontal: 30,\r\n              marginVertical: 5,\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                height: 50,\r\n                borderRadius: 5,\r\n                backgroundColor: COLORS.lightGray,\r\n              }}\r\n            >\r\n              <Image\r\n                source={item.icon}\r\n                style={{\r\n                  height: 40,\r\n                  width: 40,\r\n                }}\r\n              />\r\n            </View>\r\n\r\n            {/* Description */}\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                paddingHorizontal: 20,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <Text\r\n                style={{\r\n                  ...FONTS.body3,\r\n                }}\r\n              >\r\n                {item.description}\r\n              </Text>\r\n            </View>\r\n\r\n            {/* Quantity */}\r\n            <View\r\n              style={{\r\n                alignItems: \"flex-end\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <Text\r\n                style={{\r\n                  ...FONTS.body3,\r\n                }}\r\n              >\r\n                {item.quantity}\r\n              </Text>\r\n            </View>\r\n          </View>\r\n        )}\r\n      />\r\n\r\n      {/* Header Bar */}\r\n      {renderHeaderBar()}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Recipe;\r\n"]},"metadata":{},"sourceType":"module"}