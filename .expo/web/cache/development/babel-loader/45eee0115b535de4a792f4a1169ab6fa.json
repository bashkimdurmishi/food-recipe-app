{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { BlurView } from \"expo-blur\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { SIZES, COLORS, FONTS, icons } from \"../../constants\";\n\nvar RecipeCardCreatorDetail = function RecipeCardCreatorDetail(_ref) {\n  var _selectedRecipe$autho, _selectedRecipe$autho2;\n\n  var selectedRecipe = _ref.selectedRecipe;\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: \"row\",\n      alignItems: \"center\"\n    }\n  }, React.createElement(View, {\n    style: {\n      width: 40,\n      height: 40,\n      marginLeft: 20\n    }\n  }, React.createElement(Image, {\n    source: selectedRecipe == null ? void 0 : (_selectedRecipe$autho = selectedRecipe.author) == null ? void 0 : _selectedRecipe$autho.profilePic,\n    style: {\n      height: 40,\n      width: 40,\n      borderRadius: 20\n    }\n  })), React.createElement(View, {\n    style: {\n      flex: 1,\n      marginHorizontal: 20\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread({\n      color: COLORS.lightGray2\n    }, FONTS.body4)\n  }, \"Recipe by:\"), React.createElement(Text, {\n    style: _objectSpread({\n      color: COLORS.lightGray\n    }, FONTS.body4)\n  }, selectedRecipe == null ? void 0 : (_selectedRecipe$autho2 = selectedRecipe.author) == null ? void 0 : _selectedRecipe$autho2.name)), React.createElement(TouchableOpacity, {\n    style: {\n      width: 30,\n      height: 30,\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      marginRight: 20,\n      borderWidth: 1,\n      borderRadius: 5,\n      borderColor: COLORS.lightGreen1\n    }\n  }, React.createElement(Image, {\n    source: icons.rightArrow,\n    style: {\n      width: 18,\n      height: 18,\n      tintColor: COLORS.lightGreen1\n    }\n  })));\n};\n\nvar RecipeCreatorCardInfo = function RecipeCreatorCardInfo(_ref2) {\n  var selectedRecipe = _ref2.selectedRecipe;\n\n  if (Platform.OS === \"ios\") {\n    return React.createElement(BlurView, {\n      tint: \"dark\",\n      style: {\n        flex: 1,\n        borderRadius: SIZES.radius\n      }\n    }, React.createElement(RecipeCardCreatorDetail, {\n      selectedRecipe: selectedRecipe\n    }));\n  }\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      borderRadius: SIZES.radius,\n      backgroundColor: COLORS.transparentBlack9\n    }\n  }, React.createElement(RecipeCardCreatorDetail, {\n    selectedRecipe: selectedRecipe\n  }));\n};\n\nexport default RecipeCreatorCardInfo;","map":{"version":3,"sources":["C:/Users/U759450/Desktop/food-recipe/food-recipe/components/Recipe/RecipeCreatorCardInfo.tsx"],"names":["BlurView","React","SIZES","COLORS","FONTS","icons","RecipeCardCreatorDetail","selectedRecipe","flex","flexDirection","alignItems","width","height","marginLeft","author","profilePic","borderRadius","marginHorizontal","color","lightGray2","body4","lightGray","name","justifyContent","marginRight","borderWidth","borderColor","lightGreen1","rightArrow","tintColor","RecipeCreatorCardInfo","Platform","OS","radius","backgroundColor","transparentBlack9"],"mappings":"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","sourcesContent":["import { BlurView } from \"expo-blur\";\r\nimport React from \"react\";\r\nimport { View, Text, Platform, Image, TouchableOpacity } from \"react-native\";\r\nimport { SIZES, COLORS, FONTS, icons } from \"../../constants\";\r\n\r\nconst RecipeCardCreatorDetail = ({\r\n  selectedRecipe,\r\n}: {\r\n  selectedRecipe: any;\r\n}) => {\r\n  return (\r\n    <View\r\n      style={{\r\n        flex: 1,\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      {/* Profile Photo */}\r\n      <View\r\n        style={{\r\n          width: 40,\r\n          height: 40,\r\n          marginLeft: 20,\r\n        }}\r\n      >\r\n        <Image\r\n          source={selectedRecipe?.author?.profilePic}\r\n          style={{\r\n            height: 40,\r\n            width: 40,\r\n            borderRadius: 20,\r\n          }}\r\n        />\r\n      </View>\r\n      {/* Labels */}\r\n      <View\r\n        style={{\r\n          flex: 1,\r\n          marginHorizontal: 20,\r\n        }}\r\n      >\r\n        <Text\r\n          style={{\r\n            color: COLORS.lightGray2,\r\n            ...FONTS.body4,\r\n          }}\r\n        >\r\n          Recipe by:\r\n        </Text>\r\n        <Text\r\n          style={{\r\n            color: COLORS.lightGray,\r\n            ...FONTS.body4,\r\n          }}\r\n        >\r\n          {selectedRecipe?.author?.name}\r\n        </Text>\r\n      </View>\r\n      {/* Button */}\r\n      <TouchableOpacity\r\n        style={{\r\n          width: 30,\r\n          height: 30,\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          marginRight: 20,\r\n          borderWidth: 1,\r\n          borderRadius: 5,\r\n          borderColor: COLORS.lightGreen1,\r\n        }}\r\n      >\r\n        <Image\r\n          source={icons.rightArrow}\r\n          style={{\r\n            width: 18,\r\n            height: 18,\r\n            tintColor: COLORS.lightGreen1,\r\n          }}\r\n        />\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst RecipeCreatorCardInfo = ({ selectedRecipe }: { selectedRecipe: any }) => {\r\n  if (Platform.OS === \"ios\") {\r\n    return (\r\n      <BlurView\r\n        tint=\"dark\"\r\n        style={{\r\n          flex: 1,\r\n          borderRadius: SIZES.radius,\r\n        }}\r\n      >\r\n        <RecipeCardCreatorDetail selectedRecipe={selectedRecipe} />\r\n      </BlurView>\r\n    );\r\n  }\r\n  return (\r\n    <View\r\n      style={{\r\n        flex: 1,\r\n        borderRadius: SIZES.radius,\r\n        backgroundColor: COLORS.transparentBlack9,\r\n      }}\r\n    >\r\n      <RecipeCardCreatorDetail selectedRecipe={selectedRecipe} />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default RecipeCreatorCardInfo;\r\n"]},"metadata":{},"sourceType":"module"}